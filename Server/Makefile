#############################################################################
# Makefile for building: CUBookServer
# Generated by qmake (2.01a) (Qt 4.7.4) on: Tue Dec 6 03:08:58 2011
# Project:  CUBookServer.pro
# Template: app
# Command: /usr/bin/qmake-qt4 -spec /usr/share/qt4/mkspecs/linux-g++-32 CONFIG+=debug -o Makefile CUBookServer.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_WEBKIT -DQT_SQL_LIB -DQT_XML_LIB -DQT_GUI_LIB -DQT_NETWORK_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -m32 -pipe -g -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -m32 -pipe -g -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++-32 -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtNetwork -I/usr/include/qt4/QtGui -I/usr/include/qt4/QtXml -I/usr/include/qt4/QtSql -I/usr/include/qt4 -I.
LINK          = g++
LFLAGS        = -m32
LIBS          = $(SUBLIBS)  -L/usr/lib/i386-linux-gnu -lQtSql -lQtXml -lQtGui -lQtNetwork -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake-qt4
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = main.cpp \
		userprofile.cpp \
		updatewrapper.cpp \
		removewrapper.cpp \
		newsflash.cpp \
		messageprotocol.cpp \
		getwrapper.cpp \
		flashsegment.cpp \
		flashboard.cpp \
		filter.cpp \
		database.cpp \
		cuurl.cpp \
		cutask.cpp \
		cuserver.cpp \
		cupicture.cpp \
		cuclient.cpp \
		addwrapper.cpp \
		sqlapi.cpp \
		messagetranslator.cpp moc_cuserver.cpp \
		moc_cutask.cpp \
		moc_cuclient.cpp \
		qrc_resources.cpp
OBJECTS       = main.o \
		userprofile.o \
		updatewrapper.o \
		removewrapper.o \
		newsflash.o \
		messageprotocol.o \
		getwrapper.o \
		flashsegment.o \
		flashboard.o \
		filter.o \
		database.o \
		cuurl.o \
		cutask.o \
		cuserver.o \
		cupicture.o \
		cuclient.o \
		addwrapper.o \
		sqlapi.o \
		messagetranslator.o \
		moc_cuserver.o \
		moc_cutask.o \
		moc_cuclient.o \
		qrc_resources.o
DIST          = /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		CUBookServer.pro
QMAKE_TARGET  = CUBookServer
DESTDIR       = 
TARGET        = CUBookServer

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: CUBookServer.pro  /usr/share/qt4/mkspecs/linux-g++-32/qmake.conf /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/i386-linux-gnu/libQtSql.prl \
		/usr/lib/i386-linux-gnu/libQtXml.prl \
		/usr/lib/i386-linux-gnu/libQtGui.prl \
		/usr/lib/i386-linux-gnu/libQtNetwork.prl \
		/usr/lib/i386-linux-gnu/libQtCore.prl
	$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++-32 CONFIG+=debug -o Makefile CUBookServer.pro
/usr/share/qt4/mkspecs/common/g++.conf:
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/debug.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/i386-linux-gnu/libQtSql.prl:
/usr/lib/i386-linux-gnu/libQtXml.prl:
/usr/lib/i386-linux-gnu/libQtGui.prl:
/usr/lib/i386-linux-gnu/libQtNetwork.prl:
/usr/lib/i386-linux-gnu/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++-32 CONFIG+=debug -o Makefile CUBookServer.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/CUBookServer1.0.0 || $(MKDIR) .tmp/CUBookServer1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/CUBookServer1.0.0/ && $(COPY_FILE) --parents cuserver.h userprofile.h updatewrapper.h removewrapper.h newsflash.h messageprotocol.h getwrapper.h flashsegment.h flashboard.h database.h cuurl.h cutask.h cupicture.h cuclient.h addwrapper.h filter.h sqlapi.h messagetranslator.h .tmp/CUBookServer1.0.0/ && $(COPY_FILE) --parents resources.qrc .tmp/CUBookServer1.0.0/ && $(COPY_FILE) --parents main.cpp userprofile.cpp updatewrapper.cpp removewrapper.cpp newsflash.cpp messageprotocol.cpp getwrapper.cpp flashsegment.cpp flashboard.cpp filter.cpp database.cpp cuurl.cpp cutask.cpp cuserver.cpp cupicture.cpp cuclient.cpp addwrapper.cpp sqlapi.cpp messagetranslator.cpp .tmp/CUBookServer1.0.0/ && (cd `dirname .tmp/CUBookServer1.0.0` && $(TAR) CUBookServer1.0.0.tar CUBookServer1.0.0 && $(COMPRESS) CUBookServer1.0.0.tar) && $(MOVE) `dirname .tmp/CUBookServer1.0.0`/CUBookServer1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/CUBookServer1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_cuserver.cpp moc_cutask.cpp moc_cuclient.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_cuserver.cpp moc_cutask.cpp moc_cuclient.cpp
moc_cuserver.cpp: cuclient.h \
		cutask.h \
		messagetranslator.h \
		flashsegment.h \
		filter.h \
		newsflash.h \
		cupicture.h \
		cuurl.h \
		userprofile.h \
		sqlapi.h \
		getwrapper.h \
		addwrapper.h \
		removewrapper.h \
		updatewrapper.h \
		database.h \
		messageprotocol.h \
		flashboard.h \
		cuserver.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) cuserver.h -o moc_cuserver.cpp

moc_cutask.cpp: messagetranslator.h \
		flashsegment.h \
		filter.h \
		newsflash.h \
		cupicture.h \
		cuurl.h \
		userprofile.h \
		sqlapi.h \
		getwrapper.h \
		addwrapper.h \
		removewrapper.h \
		updatewrapper.h \
		database.h \
		messageprotocol.h \
		flashboard.h \
		cutask.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) cutask.h -o moc_cutask.cpp

moc_cuclient.cpp: cutask.h \
		messagetranslator.h \
		flashsegment.h \
		filter.h \
		newsflash.h \
		cupicture.h \
		cuurl.h \
		userprofile.h \
		sqlapi.h \
		getwrapper.h \
		addwrapper.h \
		removewrapper.h \
		updatewrapper.h \
		database.h \
		messageprotocol.h \
		flashboard.h \
		cuclient.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) cuclient.h -o moc_cuclient.cpp

compiler_rcc_make_all: qrc_resources.cpp
compiler_rcc_clean:
	-$(DEL_FILE) qrc_resources.cpp
qrc_resources.cpp: resources.qrc \
		delNews.txt \
		getFIDsRangeMax.txt \
		createNews.txt \
		getProf.txt \
		getFIDsUser.txt \
		getFIDsSegRange.txt \
		delSeg.txt \
		createSeg.txt \
		getFIDs.txt \
		getFIDsSeg.txt \
		getNewsFlash.txt \
		getFIDsRange.txt \
		getFIDsUserRange.txt \
		CUBook \
		UnAuth.txt \
		Auth.txt \
		getBL.txt \
		upProf.txt \
		getFIDsSegRangeMax.txt \
		getFIDsUserRangeMax.txt
	/usr/bin/rcc -name resources resources.qrc -o qrc_resources.cpp

compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_rcc_clean 

####### Compile

main.o: main.cpp messagetranslator.h \
		flashsegment.h \
		filter.h \
		newsflash.h \
		cupicture.h \
		cuurl.h \
		userprofile.h \
		sqlapi.h \
		getwrapper.h \
		addwrapper.h \
		removewrapper.h \
		updatewrapper.h \
		database.h \
		messageprotocol.h \
		flashboard.h \
		cuserver.h \
		cuclient.h \
		cutask.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

userprofile.o: userprofile.cpp userprofile.h \
		cupicture.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o userprofile.o userprofile.cpp

updatewrapper.o: updatewrapper.cpp updatewrapper.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o updatewrapper.o updatewrapper.cpp

removewrapper.o: removewrapper.cpp removewrapper.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o removewrapper.o removewrapper.cpp

newsflash.o: newsflash.cpp newsflash.h \
		cupicture.h \
		cuurl.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o newsflash.o newsflash.cpp

messageprotocol.o: messageprotocol.cpp messageprotocol.h \
		newsflash.h \
		cupicture.h \
		cuurl.h \
		flashboard.h \
		flashsegment.h \
		userprofile.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o messageprotocol.o messageprotocol.cpp

getwrapper.o: getwrapper.cpp getwrapper.h \
		filter.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o getwrapper.o getwrapper.cpp

flashsegment.o: flashsegment.cpp flashsegment.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o flashsegment.o flashsegment.cpp

flashboard.o: flashboard.cpp flashboard.h \
		flashsegment.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o flashboard.o flashboard.cpp

filter.o: filter.cpp filter.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o filter.o filter.cpp

database.o: database.cpp database.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o database.o database.cpp

cuurl.o: cuurl.cpp cuurl.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o cuurl.o cuurl.cpp

cutask.o: cutask.cpp cutask.h \
		messagetranslator.h \
		flashsegment.h \
		filter.h \
		newsflash.h \
		cupicture.h \
		cuurl.h \
		userprofile.h \
		sqlapi.h \
		getwrapper.h \
		addwrapper.h \
		removewrapper.h \
		updatewrapper.h \
		database.h \
		messageprotocol.h \
		flashboard.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o cutask.o cutask.cpp

cuserver.o: cuserver.cpp cuserver.h \
		cuclient.h \
		cutask.h \
		messagetranslator.h \
		flashsegment.h \
		filter.h \
		newsflash.h \
		cupicture.h \
		cuurl.h \
		userprofile.h \
		sqlapi.h \
		getwrapper.h \
		addwrapper.h \
		removewrapper.h \
		updatewrapper.h \
		database.h \
		messageprotocol.h \
		flashboard.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o cuserver.o cuserver.cpp

cupicture.o: cupicture.cpp cupicture.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o cupicture.o cupicture.cpp

cuclient.o: cuclient.cpp cuclient.h \
		cutask.h \
		messagetranslator.h \
		flashsegment.h \
		filter.h \
		newsflash.h \
		cupicture.h \
		cuurl.h \
		userprofile.h \
		sqlapi.h \
		getwrapper.h \
		addwrapper.h \
		removewrapper.h \
		updatewrapper.h \
		database.h \
		messageprotocol.h \
		flashboard.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o cuclient.o cuclient.cpp

addwrapper.o: addwrapper.cpp addwrapper.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o addwrapper.o addwrapper.cpp

sqlapi.o: sqlapi.cpp sqlapi.h \
		getwrapper.h \
		filter.h \
		addwrapper.h \
		removewrapper.h \
		updatewrapper.h \
		database.h \
		messageprotocol.h \
		newsflash.h \
		cupicture.h \
		cuurl.h \
		flashboard.h \
		flashsegment.h \
		userprofile.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o sqlapi.o sqlapi.cpp

messagetranslator.o: messagetranslator.cpp messagetranslator.h \
		flashsegment.h \
		filter.h \
		newsflash.h \
		cupicture.h \
		cuurl.h \
		userprofile.h \
		sqlapi.h \
		getwrapper.h \
		addwrapper.h \
		removewrapper.h \
		updatewrapper.h \
		database.h \
		messageprotocol.h \
		flashboard.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o messagetranslator.o messagetranslator.cpp

moc_cuserver.o: moc_cuserver.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_cuserver.o moc_cuserver.cpp

moc_cutask.o: moc_cutask.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_cutask.o moc_cutask.cpp

moc_cuclient.o: moc_cuclient.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_cuclient.o moc_cuclient.cpp

qrc_resources.o: qrc_resources.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o qrc_resources.o qrc_resources.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

